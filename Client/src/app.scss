/* Write your global styles here, in SCSS syntax. Variables and mixins from the src/variables.scss file are available here without importing */
@tailwind base;
@tailwind components;
@tailwind utilities;

@import './themes';
@import './variables';
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Josefin+Slab:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap');

@layer utilities {
  .highlight-white {
    box-shadow: inset 0 1px 0 0 rgb(255 255 255/0.05);
  }
  .highlight-black {
    box-shadow: inset 0 1px 0 0 rgb(0 0 0/0.5);
  }
  .highlight-shadowed {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: inset 0 1px 0 0 rgb(255 255 255/0.05),
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);
  }
  .highlight-shadowed-black {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: inset 0 -1px 0 0 rgb(0 0 0/0.05),
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
    var(--tw-shadow);
  }
}

:root {
  /* Text */
  --body-text: 'Inter', sans-serif;
  --header-text: 'Josefin Sans', sans-serif;
  --body-serif-text: 'Josefin Slab', serif;
  --section-text: 'Inter', sans-serif;


}

html,
body {
  @apply lg:w-full h-full;
}
html {
  /* Light Mode */
  --background: rgb(251, 251, 251);
  --nav-background: rgb(236, 236, 236);
  --dropshadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  --text-color: rgb(0, 0, 0);
  --borders: rgb(128, 128, 128);
  --code-background: rgb(211, 211, 211);
  --placeholder: rgba(127, 127, 127, 0.6);
  --select-bg: rgba(212, 212, 216, 1);
  @apply transition-all;
  &.dark {
    --background: rgb(39, 39, 39);
    --nav-background: rgb(47, 46, 46);
    --dropshadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    --text-color: rgb(245, 245, 245);
    --borders: rgb(255, 255, 255);
    --code-background: rgb(58, 58, 58);
    --placeholder: rgba(127, 127, 127, 0.6);
    --select-bg: rgba(63, 63, 70, 1);
    @apply transition-all;
  }
}
body {
  color: var(--text-color);
  margin: 0;
  box-sizing: border-box;
  font-size: 14px;
  font-family: var(--body-text);
  background: var(--background);
  @apply lg:overflow-y-hidden;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--accent);
  font-family: var(--header-text);
  @apply leading-normal relative top-0.5 font-medium;
}
p {
  margin: 1rem 0 1rem 0;
}
a {
  @apply transition;
  color: var(--accent);
  text-decoration: none;
  &:hover {
    color: var(--accent-dark);
    text-decoration: underline;
  }
}
div.empty {
  @apply w-full flex-1;
  margin-top: 2.5rem;
  text-align: center;
  h3 {
    @apply text-[28px] lg:text-[36px];
    font-family: var(--header-text);
    font-weight: 300;
    margin-bottom: 0.5rem;
    color: var(--accent);
  }
  p {
    margin-top: 0;
    margin-bottom: 0;
  }
}

/* Panels */
div.panel-container {
  @apply w-full lg:min-w-[300px] lg:max-w-[300px] lg:h-[calc(100vh-60px)] lg:sticky top-0 lg:overflow-hidden lg:overflow-y-scroll;
  div.title-block {
    @apply flex flex-col items-center justify-center;
    h1 {
      @apply text-3xl px-4 py-2;
    }
  }

  h1.title {
    @apply text-4xl mt-12 mb-6;
  }

  div.top-block {
    @apply px-2.5 py-8 mb-2 flex items-center text-white;
    background: var(--accent-dark);
    h1 {
      @apply text-white text-4xl relative top-1;
    }
    div.left-button {
      @apply mr-4;
    }
  }

  div.content-container {
    @apply px-3 my-4;
  }
  div.panel-section {
    @apply mb-4 last:mb-0 rounded-xl overflow-hidden;
    h3 {
      @apply text-xl mb-1 ml-2 all-small-caps font-semibold;
      color: var(--text-color);
    }

    div.panel-box {
      @apply bg-zinc-200 rounded-lg p-4 flex flex-col items-center relative;
    }
  }
  button.panel-button, a.panel-button, div.panel-button {
    @apply flex items-center block no-underline p-3 text-lg border-b border-zinc-400 w-full last:border-0 bg-zinc-300;
    color: var(--text-color);
    font-family: var(--header-text);
    .caret {
      @apply text-zinc-400;
    }

    &:hover {
      @apply bg-zinc-400;
      .caret {
        @apply text-zinc-500;
      }
    }

    &.active {
      @apply text-white;
      background-color: var(--accent);
      .caret {
        @apply text-white;
      }
      &:hover {
        background-color: var(--accent-light);
      }
    }

    span {
      @apply ml-2 flex-1 text-left relative top-[0.1625rem];
    }
  }
}

.dark div.panel-container {
  button.panel-button, a.panel-button {
    @apply border-zinc-500 bg-zinc-600;
    &:hover {
      @apply bg-zinc-500;
      .caret {
        @apply text-zinc-400;
      }
    }
    &.active {
      @apply text-white;
      background-color: var(--accent);
      .caret {
        @apply text-white;
      }
      &:hover {
        background-color: var(--accent-light);
      }
    }
  }

  div.panel-section {
    div.panel-box {
      @apply bg-zinc-600;
    }
  }
}

/* Editor */

.dark div.ProseMirror {
  @apply border-zinc-500;
  blockquote {
    @apply bg-zinc-600;
  }
}

div.ProseMirror {
  @apply py-0.5 px-3 bg-transparent mb-0 focus:outline-none border-t-2 border-transparent transition transform origin-center;
  min-height: 10rem !important;
  max-height: 85vh !important;
  overflow-y: scroll;

  &:focus {
    border-color: var(--borders);
  }

  p.is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    color: rgb(97, 103, 116);
    pointer-events: none;
    height: 0;
  }

  // Headers and default image style
  h1 {
    font-size: 3em;
  }
  h2 {
    font-size: 2em;
  }
  h3 {
    font-size: 1.5em;
  }
  h4 {
    font-size: 1.25em;
  }
  h5 {
    font-size: 1em;
    font-weight: bold;
    text-transform: uppercase;
  }
  h6 {
    font-size: 1em;
    text-transform: uppercase;
  }
  img {
    max-width: 100%;
    display: inline;
  }

  blockquote {
    @apply bg-zinc-300 rounded-xl m-3 px-3 pt-0.5 pb-2;
    p:first-child {
      @apply pt-0 my-0 font-bold text-base tracking-wider all-small-caps;
    }
    p:nth-child(2) {
      @apply mt-0
    }
    p:last-child {
      @apply pb-0 mb-0;
    }
  }

  // CKEditor-generated image styles
  .image {
    display: table;
    clear: both;
    text-align: center;
    margin: 1em auto;
  }

  .image-style-align- {
    &left {
      float: left;
      margin-right: 1.5em;
    }
    &center {
      margin-left: auto;
      margin-right: auto;
    }
    &right {
      float: right;
      margin-left: 1.5em;
    }
  }

  // A little CSS hack to force images at the bottom of content bodies to not break out of their containers.
  // More details here: http://bonrouge.com/br.php?page=floats
  > :last-child:after {
    content: '.';
    display: block;
    height: 0;
    overflow: hidden;
    clear: both;
    visibility: hidden;
  }

  // CKEditor-generated font sizes
  span.text- {
    &tiny {
      font-size: 0.7em;
    }
    &small {
      font-size: 0.85em;
    }
    &big {
      font-size: 1.4em;
    }
    &huge {
      font-size: 1.85em;
    }
  }
  ul,
  ol {
    margin-left: 2.5rem;
  }
  ul {
    list-style-type: disc;
  }
  ol {
    list-style-type: decimal;
  }
  li {
    @apply my-1;
  }

  p.is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    @apply text-zinc-400;
    pointer-events: none;
    height: 0;
  }
}

/* Sections, blog bodies, authors notes, and long descriptions.
 * These go in the main stylesheet because section bodies have
 * no view encapsulation, and can be (and are) affected by global
 * styles. Therefore, these must also be global styles.
 * If we can find a way to have an element with directly-set
 * innerHtml AND view encapsulation, we can move all this back down to the
 * component level.
*/
div.comment-body,
div.section-body,
div.blog-body,
div.authors-note,
div.html-description,
section {
  @include content-body();
}

.dark {
  div.comment-body,
  div.section-body,
  div.blog-body,
  div.authors-note,
  div.html-description,
  section {
    blockquote {
      @apply bg-zinc-600;
    }
  }
}